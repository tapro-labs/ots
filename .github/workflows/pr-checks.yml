name: PR checks
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'

  base_check:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: volta-cli/action@d253558a6e356722728a10e9a469190de21a83ef
      - name: Install dependencies
        run: yarn --frozen-lockfile

  frontend_check:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - uses: volta-cli/action@d253558a6e356722728a10e9a469190de21a83ef
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Linting
        run: yarn code-lint-check && yarn style-lint-check
      - name: Build app
        run: cp .env.example .env && yarn build

  backend_check:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install rust version
        uses: dtolnay/rust-toolchain@0e66bd3e6b38ec0ad5312288c83e47c143e6b09e
        with:
          toolchain: 1.80
      - name: Linting
        run: make lint
      - name: Build
        run: make build
        env:
          ROCKET_PROFILE: release
          ENABLED_FEATURES: ${{ secrets.ENABLED_FEATURES }}
